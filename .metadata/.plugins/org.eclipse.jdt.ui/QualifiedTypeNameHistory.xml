<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.mysql.cj.xdevapi.PreparableStatement"/>
    <fullyQualifiedTypeName name="jdbc.test.DBConnectionTest1"/>
    <fullyQualifiedTypeName name="jdbc.test.DBConnectionTest2"/>
    <fullyQualifiedTypeName name="jdbc.step1.test.JDBC4StepTest"/>
    <fullyQualifiedTypeName name="java.util.Properties"/>
    <fullyQualifiedTypeName name="java.io.FileInputStream"/>
    <fullyQualifiedTypeName name="java.sql.DriverManager"/>
    <fullyQualifiedTypeName name="com.encore.test.SimplePersonJDBCTest"/>
    <fullyQualifiedTypeName name="java.sql.SQLClientInfoException"/>
    <fullyQualifiedTypeName name="com.encore.vo.Person"/>
    <fullyQualifiedTypeName name="com.encore.dao.EmployeeDAO"/>
    <fullyQualifiedTypeName name="com.encore.test.EmployeeDAOTest"/>
    <fullyQualifiedTypeName name="com.encore.dao.impl.EmployeeDAOImpl"/>
    <fullyQualifiedTypeName name="com.encore.vo.Employee"/>
    <fullyQualifiedTypeName name="com.encore.dao.BookDAO"/>
    <fullyQualifiedTypeName name="com.encore.dao.impl.BookDAOImpl"/>
    <fullyQualifiedTypeName name="com.encore.vo.Book"/>
    <fullyQualifiedTypeName name="com.encore.exception.BookNotFoundException"/>
    <fullyQualifiedTypeName name="com.encore.exception.InvalidInputException"/>
    <fullyQualifiedTypeName name="com.encore.exception.DuplicateISBNException"/>
    <fullyQualifiedTypeName name="java.sql.Connection"/>
    <fullyQualifiedTypeName name="broker.twotier.dao.DatabaseTemplate"/>
    <fullyQualifiedTypeName name="java.lang.ClassNotFoundException"/>
    <fullyQualifiedTypeName name="java.util.Vector"/>
    <fullyQualifiedTypeName name="broker.twotier.vo.SharesRec"/>
    <fullyQualifiedTypeName name="java.sql.PreparedStatement"/>
    <fullyQualifiedTypeName name="broker.twotier.exception.InvalidTransactionException"/>
    <fullyQualifiedTypeName name="broker.twotier.exception.DuplicateSSNException"/>
    <fullyQualifiedTypeName name="broker.twotier.vo.CustomerRec"/>
    <fullyQualifiedTypeName name="broker.twotier.exception.RecordNotFoundException"/>
    <fullyQualifiedTypeName name="java.sql.SQLException"/>
    <fullyQualifiedTypeName name="java.io.ObjectOutput"/>
    <fullyQualifiedTypeName name="java.lang.ArrayIndexOutOfBoundsException"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="java.io.Serializable"/>
    <fullyQualifiedTypeName name="java.io.IOError"/>
    <fullyQualifiedTypeName name="java.security.PublicKey"/>
    <fullyQualifiedTypeName name="broker.three.server.ProtocolHandler"/>
    <fullyQualifiedTypeName name="java.net.ServerSocket"/>
    <fullyQualifiedTypeName name="broker.three.server.Database"/>
    <fullyQualifiedTypeName name="config.ServerInfo"/>
    <fullyQualifiedTypeName name="java.lang.Thread"/>
    <fullyQualifiedTypeName name="broker.three.server.JuryThread"/>
    <fullyQualifiedTypeName name="java.io.ObjectInputStream"/>
    <fullyQualifiedTypeName name="java.io.ObjectOutputStream"/>
    <fullyQualifiedTypeName name="java.sql.ResultSet"/>
    <fullyQualifiedTypeName name="broker.three.shares.Result"/>
    <fullyQualifiedTypeName name="broker.three.shares.Command"/>
    <fullyQualifiedTypeName name="broker.three.exception.InvalidTransactionException"/>
    <fullyQualifiedTypeName name="broker.three.vo.CustomerRec"/>
    <fullyQualifiedTypeName name="broker.three.exception.DuplicateSSNException"/>
    <fullyQualifiedTypeName name="broker.three.exception.RecordNotFoundException"/>
    <fullyQualifiedTypeName name="java.io.IOException"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
</qualifiedTypeNameHistroy>
